version: '3'

# for local development
# TODO: CI/CD設計時に根本から見直し

vars:
  DB_NETWORK_NAME: 
    sh: echo $DB_NETWORK_NAME
  DB_NAME: 
    sh: echo $DB_NAME
  DB_SCHEMA_PATH:
    sh: echo $(pwd)/tool/postgres/schema.sql
  DB_SERVICE_NAME: sample-db
  SQLDEF_IMAGE_TAG: psqldef-runner

  SWAG_VERSION: v1.16.3
  

tasks:
  sqldef:build:
    cmds:
      - docker build -t {{.SQLDEF_IMAGE_TAG}} --no-cache ./tool/psqldef 
  sqldef:test:
    cmds:
      - docker run --rm -it --network {{.DB_NETWORK_NAME}} -v $(pwd)/tool/psqldef/test.sql:/test.sql {{.SQLDEF_IMAGE_TAG}} sh -c "psqldef -h {{.DB_SERVICE_NAME}} -U root -W root {{.DB_NAME}} --dry-run < /test.sql"
  db:init:
    cmds:
      - docker compose -f "./tool/postgres/docker-compose-local.yml" up -d --build
  # db:for-sqldef-test:
  #   cmds:
  #     - docker compose -f "tool/postgres/docker-compose-local.yml" exec {{.DB_SERVICE_NAME}} sh -c "psql -U root -h localhost -c \"CREATE DATABASE {{.SQLDEF_TEST_DB_NAME}}\""
  db:dump:
    cmds:
      - docker run --rm -it --network {{.DB_NETWORK_NAME}} {{.SQLDEF_IMAGE_TAG}} sh -c "psqldef -h {{.DB_SERVICE_NAME}} -U root -W root {{.DB_NAME}} --export"
  db:dryrun:
    cmds:
      - docker run --rm -it --network {{.DB_NETWORK_NAME}} -v {{.DB_SCHEMA_PATH}}:/schema.sql {{.SQLDEF_IMAGE_TAG}} sh -c "psqldef -h {{.DB_SERVICE_NAME}} -U root -W root {{.DB_NAME}} --dry-run --enable-drop-table < schema.sql"
  db:apply:
    cmds:
      - docker run --rm -it --network {{.DB_NETWORK_NAME}} -v {{.DB_SCHEMA_PATH}}:/schema.sql {{.SQLDEF_IMAGE_TAG}} sh -c "psqldef -h {{.DB_SERVICE_NAME}} -U root -W root {{.DB_NAME}} --enable-drop-table < schema.sql"
  
  swag:
    cmds:
      - swag init -d ./sample_auth_app -o ./sample_auth_app/adapter/inbound/echo/docs
  swag:docker:
    describe: 使用不可。swag 公式イメージはバグってて動かないので自分で go install して実行してね
    cmds:
      - docker run --rm -v $(pwd):/code ghcr.io/swaggo/swag:{{.SWAG_VERSION}} init -d ./sample_auth_app -o ./sample_auth_app/adapter/inbound/echo/docs